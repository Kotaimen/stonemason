# -*- encoding: utf-8 -*-

maptype = 'image'


def index_func(resx, resy):
    resolution = [
        78271.5170,
        39135.7585,
        19567.8792,
        9783.9396,
        4891.9698,
        2445.9849,
        1222.9925,
        611.4962,
        305.7481,
        152.8741,
        76.4370,
        38.2185,
        19.1093,
        9.5546,
        4.7773,
        2.3887,
        1.1943,
        0.5972,
        0.2986,
        0.1493,
        0.0746,
        0.0373,
        0.0187,
    ]

    if resx <= resolution[12]:
        index = "/Volumes/data/geodata/geodata/Stage/Doraemon/index.shp"
    else:
        index = "/Volumes/data/geodata/geodata/Stage/Doraemon/index_srtm3.shp"

    return index

# Theme definition
THEME = dict(
    # name tag of the theme, must be a valid identifier
    name='sample_hillshade',
    metadata=dict(
        # display name
        title='Sample: HillShade',
        # version string
        version='0.2.0',
        # simple description
        abstract='Sample theme with hill shade.',
        # data attribution
        attribution='Map Design: K&R, Data: Natural Earth',
        # initial origin in (lon, lat)
        origin=(139.0458, 35.3650),
        # initlal zoom level
        origin_zoom=14
    ),
    # list of schemas in the theme
    schemas=[

        dict(
            # tag of the schema, will be append to theme name
            tag='.png',
            # pyramid
            pyramid=dict(
                # size of the metatile when rendering in tile server
                stride=1,
                # geographic coordinate system
                geogcs='WGS84',
                # projection coordinate system
                projcs='EPSG:3857',
                # zoom levels
                levels=range(0, 18),

                # projbounds=(15497314, 4220491, 15583673, 4300073),
            ),
            # maptype
            maptype=maptype,
            # tile format
            tileformat=dict(format='PNG'),
            # tile renderer
            renderer=dict(
                prototype=maptype,
                layers=dict(
                    shade={
                        'prototype': 'shadedrelief',
                        'index': index_func,
                        'scale': 1,
                        'buffer': 8,
                        'sigmoid_cutoff': 0.71,
                        'sigmoid_gain': 2,
                        'sigmoid_base': 0,
                    },
                    color={
                        'prototype': 'coloredrelief',
                        'index': "/Users/ray/proj/geodata/Stage/NaturalEarth3.1/index.shp",
                        'buffer': 8,
                    },
                    root_={
                        'prototype': 'pil.composer',
                        'sources': ['color', 'shade'],
                        'command': ['overlay']
                    },
                    root={
                        'prototype': 'basic.filter',
                        'source': 'root_',
                        'filter_name': 'SMOOTH',
                    }
                )
            )
        )

    ]
)
